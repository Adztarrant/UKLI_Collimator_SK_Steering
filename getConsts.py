from array import array
import sys

def getInjTarPos(pos):
    if pos==0: # Old top light injector (location of SK deployment)
        injPos = array('d',[-35.3, 777.7, 1802.7])
        tarPos = array('d',[-35.3, 777.7, -1810.0]) # SK is 14.81, 915.6, -1810.0
    elif pos==1: # New top (default for vertical laser analysis)
        injPos = array('d',[-70.7, -777.7, 1802.7])
        tarPos = array('d',[-25.00, -694.5, -1810.0])
    elif pos==2: # B1 injector
        injPos = array('d',[1490.73, 768.14, 1232.25])
        tarPos = array('d',[-1474.44, -825.362, 1243.0])
    elif pos==3: # B2 injector
        injPos = array('d',[1490.73, 768.14, 595.95])
        tarPos = array('d',[-1453.88, -860.984, 600.0])
    elif pos==4: # B3 injector
        injPos = array('d',[1490.73, 768.14, -40.35])
        tarPos = array('d',[-1494.65, -788.019, -99.00])
    elif pos==5: # B4 injector
        injPos = array('d',[1490.73, 768.14, -605.95])
        tarPos = array('d',[-1459.59, -851.269, -565.00])
    elif pos==6: # B5 injector
        injPos = array('d',[1490.73, 768.14, -1242.25])
        tarPos = array('d',[-1427.93, -903.300, -1232.00])
    elif pos==7: # bottom injector
        injPos = array('d',[-70.7, 777.7, -1802.7])
        tarPos = array('d',[-103.00, 768.8, 1810.0])
    else:
        print "ERROR: Invalid position definition. Should be integer from 0-7."
        print "Exiting..."
        sys.exit(1)
    return injPos, tarPos

def getSpeedOfLight(wav): #is the wavelength here dependent on the group velocity of the light
    '''Takes wavelength in nm, returns specific speed of light in water in cm/ns.'''
    if wav==337:
        c = 21.3070107
    elif wav==375:
        c = 21.5782452
    elif wav==405:
        c = 21.7289524 #note that SK script seems buggy so in MC wav=337nm is used
        #c = 21.3070107
    elif wav==420:
        c = 21.7899000
    elif wav==435:
        c = 21.835983
    elif wav==473:
        c = 21.9527283
    else:
        print "ERROR: Incorrect value submitted for wavelength. Should be in nm."
        print "Exiting..."
        sys.exit(1)
    print "INFO: Wavelength is "+str(wav)+"nm. Speed of light in water = "+str(c)+"cm/ns"
    return c

def getListOfRuns(period):
    if period==0:
        print "Reference period"
        run = array('i',[82909,82910,82911,82912,82914])
    elif period==1:
        print "First check period"
        run = array('i',[85005,85007,85009,85011,85013])
    elif period==2:
        print "Second check period"
        run = array('i',[85223,85224,85225,85226,85234])
    elif period==3:
        print "Third check period"
        run = array('i',[85443,85444,85445,85446,85447,85448,85450])
    elif period==4:
        print "Fourth check period (2020/12/10 - 2020/12/15)"
        run = array('i',[85502,85504,85505,85506,85507,85518])
    elif period==5:
        print "Fifth check period (2020/12/25 - 2021/12/30)"
        run = array('i',[85529,85530,85531,85532,85533,85534])
    return run

def getAllRuns():
    run = array('i',[82909,82910,82911,82912,82914,85001,85005,85007,85009,85011,85013,85015,85038,85046,85065,85067,85069,85071,85075,85080,85086,85087,85105,85106,85108,85109,85110,85111,85118,85138,85139,85140,85141,85142,85143,85147,85165,85166,85169,85170,85171,85172,85176,85193,85194,85195,85196,85197,85200,85201,85208,85220,85221,85222,85223,85224,85225,85226,85234,85235,85239,85240,85241,85242,85243,85244,85245,85253,85254,85258,85259,85261,85266,85267,85268,85270,85278,85279,85280,85281,85282,85286,85287,85289,85290,85291,85292,85293,85294,85295,85296,85297,85305,85307,85309,85310,85311,85312,85313,85314,85315,85316,85318,85319,85320,85321,85322,85323,85327,85329,85331,85333,85334,85342,85348,85350,85351,85352,85354,85357,85365,85366,85368,85370,85373,85374,85375,85376,85378,85380,85382,85392,85393,85401,85402,85403,85404,85405,85406,85407,85412,85414,85415,85423,85425,85427,85428,85433,85441,85442,85443,85444,85445,85446,85447,85448,85450,85451,85452,85455,85456,85457,85458,85461,85463,85465,85466,85467,85468,85469,85471,85486,85487,85488,85489,85490,85492,85493,85494,85495,85498,85500,85501,85502,85504,85505,85506,85507,85518,85519,85520,85521,85522,85523,85525,85526,85527,85528,85529,85530,85531,85532,85533,85534,85535,85536,85537,85538,85539,85540,85550,85551,85552,85553,85554,85555,85556,85557,85558,85559,85561,85562,85563,85576,85590,85605,85619,85632,85633,85634,85673,85674,85675,85684,85686,85687,85688,85689,85690,85696,85697,85699,85700,85708,85709,85710,85712,85713,85715,85717,85718,85720,85721,85722,85736,85737,85738,85740,85742,85744,85745,85747,85749,85750,85751,85752,85753,85754,85755,85756,85757,85758,85759,85760,85761,85763,85765,85766,85767,85775,85776,85777,85778,85779,85780,85781,85782,85783,85784,85785,85786,85787,85788,85789,85790,85791,85792,85793,85794,85795,85796,85797,85799,85800,85801,85802,85803,85804,85805,85806,85807,85808,85809,85810,85811,85814,85815,85816,85817,85818,85819,85820,85834,85835,85836,85837,85838,85839,85840,85841,85842,85844,85846,85847,85848,85849,85850,85851,85852,85853,85854,85856,85857,85858,85859,85860,85861,85862,85864,85865,85866,85867,85868,85869,85883,85885,85887,85889,85891,85893,85894,85895,85896,85897,85898,85899,85900,85901,85902,85903,85904,85905,85906,85907,85908,85909,85910,85911,85912,85914,85936,85937,85939,85941,85943,85944,85945,85946,85947,85948,85949,85951,85952,85953,85954,85955,85956,85957,85958,85959,85960,85961,85962,85963,85964,85965,85966,85967,85968,85969,85970,85972,85974,85975,85977,85982,85983,85984,85985,85986,85987,85988,85989,85990,85991,86000,86001,86016,86017,86019,86020,86044,86045,86046,86048,86050,86051,86053,86054,86055,86056,86058,86059,86060,86061,86062,86063,86064,86065,86066,86068,86071,86072,86073,86074,86075,86080,86081,86082,86098,86100,86101,86102,86103,86104,86105,86106,86109,86122,86124,86133,86148,86149,86150,86152,86163,86165,86166,86167,86168,86169,86171,86172,86174,86175,86176,86177,86178,86179,86180,86181,86182,86183,86198,86208,86222,86236,86239,86240,86242,86243,86244,86245,86246,86247,86248])
    run = array('i',[86208,86222,86236,86239,86240,86242,86243,86244,86245,86246,86247,86248,86249,86250,86257,86258,86259,86260,86261,86263,86264,86265,86266,86267,86270,86271,86272,86273,86274,86275,86276,86277,86278,86279,86280,86281,86298,86299,86300,86301,86302,86303,86304,86306,86307,86309,86310,86311,86312,86313,86314,86315,86316,86317,86320,86322])
    return run

